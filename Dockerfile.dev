# Emergency AI - Development Dockerfile
# Optimized for development with hot reloading and debugging capabilities

FROM python:3.10-slim

# Set environment variables for development
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    DEBIAN_FRONTEND=noninteractive \
    STREAMLIT_SERVER_PORT=8501 \
    STREAMLIT_SERVER_ADDRESS=0.0.0.0 \
    STREAMLIT_SERVER_HEADLESS=true \
    STREAMLIT_BROWSER_GATHER_USAGE_STATS=false \
    DEVELOPMENT_MODE=true

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    pkg-config \
    libasound2-dev \
    portaudio19-dev \
    libffi-dev \
    libssl-dev \
    ffmpeg \
    curl \
    wget \
    git \
    vim \
    htop \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install dependencies
COPY pyproject.toml /app/
RUN pip install --upgrade pip setuptools wheel && \
    pip install -e .[dev,testing,docs]

# Copy application code
COPY . /app/

# Create necessary directories and development model script
RUN mkdir -p /app/logs /app/tmp_chunks /app/uploads /app/models && \
    printf '%s\n' \
    '#!/bin/bash' \
    'set -e' \
    'echo "Downloading development models..."' \
    'mkdir -p models/vosk-model-small-en-us-0.15' \
    'mkdir -p models/whisper-medium' \
    'echo "Note: Vosk and Whisper models will be downloaded on first run if not present."' \
    'echo "For faster development startup, you may pre-download models:"' \
    'echo "  - Vosk: https://alphacephei.com/vosk/models/vosk-model-small-en-us-0.15.zip"' \
    'echo "  - Whisper models are downloaded automatically by faster-whisper"' \
    'echo "Development models ready!"' \
    > /app/download_dev_models.sh && \
    chmod +x /app/download_dev_models.sh

# Expose ports for development
EXPOSE 8501 8000 5678

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8501/_stcore/health || exit 1

# Default development command
CMD ["streamlit", "run", "/app/WORKING_FILES/app_streamlit.py", "--server.port=8501", "--server.address=0.0.0.0", "--server.runOnSave=true"]